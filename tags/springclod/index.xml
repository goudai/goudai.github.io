<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>springclod on 青木的博客</title>
    <link>https://goudai.github.io/tags/springclod/</link>
    <description>Recent content in springclod on 青木的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 20 Aug 2018 19:18:33 +0000</lastBuildDate><atom:link href="https://goudai.github.io/tags/springclod/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何构建springcloud微服务中的异常处理体系</title>
      <link>https://goudai.github.io/images/How-to-handle-exceptions-gracefully-in-springcloud/</link>
      <pubDate>Mon, 20 Aug 2018 19:18:33 +0000</pubDate>
      
      <guid>https://goudai.github.io/images/How-to-handle-exceptions-gracefully-in-springcloud/</guid>
      <description>&lt;h1 id=&#34;需求&#34;&gt;需求&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;对于我们的任何系统而言一般分为正常的业务流程和异常业务流程&lt;/li&gt;
&lt;li&gt;我们希望业务在编写正常的业务逻辑的时候，无需去考虑处理异常的业务流程，异常对于正常的业务是完全分离的，透明的。&lt;/li&gt;
&lt;li&gt;我们希望前端也能有一套异常处理体系（在前后端分离下尤为重要）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;目标&#34;&gt;目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;搭建异常处理体系流程，统一的进行异常的管理和对应的处理（包括前后端）&lt;/li&gt;
&lt;li&gt;利用spring提供的全局异常处理器完成后端的server异常统一处理&lt;/li&gt;
&lt;li&gt;利用zuul的ErrorFilter统一处理网关相关异常&lt;/li&gt;
&lt;li&gt;利用Feign对异常的处理方式，及其扩展，完成服务调服务(S2S)时候异常透明的传递。&lt;/li&gt;
&lt;li&gt;利用&lt;a href=&#34;https://github.com/dvajs/dva&#34;&gt;dvs&lt;/a&gt; 的 app.use 方法注册自己的全局异常处理器插件，完成前端的异常流程体系&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>
